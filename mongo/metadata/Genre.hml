---
kind: ObjectType
version: v1
definition:
  name: Genre
  fields:
    - name: id
      type: ObjectId
    - name: genreId
      type: Int
    - name: name
      type: String
  graphql:
    typeName: Mongo_Genre
    inputTypeName: Mongo_GenreInput
  dataConnectorTypeMapping:
    - dataConnectorName: mongo
      dataConnectorObjectType: genre
      fieldMapping:
        id:
          column:
            name: _id
        genreId:
          column:
            name: genre_id
        name:
          column:
            name: name

---
kind: TypePermissions
version: v1
definition:
  typeName: Genre
  permissions:
    - role: admin
      output:
        allowedFields:
          - id
          - genreId
          - name

---
kind: ObjectBooleanExpressionType
version: v1
definition:
  name: GenreBoolExp
  objectType: Genre
  dataConnectorName: mongo
  dataConnectorObjectType: genre
  comparableFields:
    - fieldName: id
      operators:
        enableAll: true
    - fieldName: genreId
      operators:
        enableAll: true
    - fieldName: name
      operators:
        enableAll: true
  graphql:
    typeName: Mongo_GenreBoolExp

---
kind: Model
version: v1
definition:
  name: Genre
  objectType: Genre
  source:
    dataConnectorName: mongo
    collection: genre
  filterExpressionType: GenreBoolExp
  orderableFields:
    - fieldName: id
      orderByDirections:
        enableAll: true
    - fieldName: genreId
      orderByDirections:
        enableAll: true
    - fieldName: name
      orderByDirections:
        enableAll: true
  graphql:
    selectMany:
      queryRootField: mongo_genre
    selectUniques: []
    orderByExpressionType: Mongo_GenreOrderBy

---
kind: ModelPermissions
version: v1
definition:
  modelName: Genre
  permissions:
    - role: admin
      select:
        filter: null

